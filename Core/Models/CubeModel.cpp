#include "CubeModel.h"

/*float Tverts[120] =
{
	//front
	-1.0f, -1.0f, 1.0f, //Vertex 0
	0.0f, 0.0f,//uv
	+1.0f, -1.0f, 1.0f,  //v1
	+1.0f, 0.0f,
	+1.0f, +1.0f, 1.0f,   //v3
	+1.0f, +1.0f,
	-1.0f, +1.0f, 1.0f,  //v2
		0.0f, +1.0f,
	//right
	1.0f, -1.0f, 1.0f,  //...
	1.0f, 0.0f,
	1.0f, -1.0f, -1.0f,
	+0.0f, 0.0f,
	1.0f, 1.0f, -1.0f,
	+0.0f, +1.0f,
	1.0f, 1.0f, 1.0f,
	1.0f, +1.0f,
	//back
	1.0f, -1.0f, -1.0f,
	0.0f, 0.0f,
	-1.0f, -1.0f, -1.0f,
	+1.0f, 0.0f,
	-1.0f, 1.0f, -1.0f,
	+1.0f, +1.0f,
	1.0f, 1.0f, -1.0f,
	0.0f, +1.0f,
	//left
	-1.0f, -1.0f, -1.0f,
	+1.0f, 0.0f,
	-1.0f, -1.0f, 1.0f,
	0.0f, 0.0f,
	-1.0f, 1.0f, 1.0f,
	0.0f, +1.0f,
	-1.0f, 1.0f, -1.0f,
	+1.0f, +1.0f,
	//bottom
	-1.0f, -1.0f, -1.0f,
	+1.0f, 0.0f,
	1.0f, -1.0f, -1.0f,
	+1.0f, +1.0f,
	1.0f, -1.0f, 1.0f,
	0.0f, +1.0f,
	-1.0f, -1.0f, 1.0f,
	0.0f, 0.0f,
	//top
	-1.0f, 1.0f, 1.0f,
	0.0f, 0.0f,
	1.0f, 1.0f, 1.0f,
	0.0f, +1.0f,
	1.0f, 1.0f, -1.0f,	
	+1.0f, +1.0f,
	-1.0f, 1.0f, -1.0f,
	+1.0f, 0.0f,
};*/
CubeModel::CubeModel()
{
	count = 24;
	indicesCount = 36;
	indices = new unsigned short[indicesCount]
	{
		0, 1, 2, 1, 2, 3, //Front
		4, 5, 6, 5, 6, 7, //Back
		4, 0, 3, 0, 3, 7, //Left
		1, 5, 2, 5, 2, 6, //Right
		0, 1, 5, 1, 5, 4, //Top
		2, 6, 7, 6, 7, 3, //Bottom
	};
	verts = new float[count]
	{
		-1.0f, +1.0f, +0.5f,
		+1.0f, +1.0f, +0.5f,
		+1.0f, -1.0f, +0.5f,
		-1.0f, -1.0f, +0.5f,
		-1.0f, +1.0f, -0.5f,
		+1.0f, +1.0f, -0.5f,
		+1.0f, -1.0f, -0.5f,
		-1.0f, -1.0f, -0.5f,
	};
	normals = new float[count]
	{
		+0.0f, +0.0f, +1.0f,
		+0.0f, +0.0f, +1.0f,
		+0.0f, +0.0f, +1.0f,
		+0.0f, +0.0f, +1.0f,
		+0.0f, +0.0f, -1.0f,
		+0.0f, +0.0f, -1.0f,
		+0.0f, +0.0f, -1.0f,
		+0.0f, +0.0f, -1.0f,
	};
	uvs = new float[(count/3)*2]
	{
		+0.0f, +1.0f,
		+1.0f, +1.0f,
		+1.0f, +0.0f,
		+0.0f, +0.0f,
		+1.0f, +1.0f,
		+0.0f, +1.0f,
		+0.0f, +0.0f,
		+1.0f, +0.0f,
	};
}